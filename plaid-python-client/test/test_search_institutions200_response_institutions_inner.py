# coding: utf-8

"""
    Plaid API

    API for accessing financial institution data via Plaid.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_institutions200_response_institutions_inner import SearchInstitutions200ResponseInstitutionsInner

class TestSearchInstitutions200ResponseInstitutionsInner(unittest.TestCase):
    """SearchInstitutions200ResponseInstitutionsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchInstitutions200ResponseInstitutionsInner:
        """Test SearchInstitutions200ResponseInstitutionsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchInstitutions200ResponseInstitutionsInner`
        """
        model = SearchInstitutions200ResponseInstitutionsInner()
        if include_optional:
            return SearchInstitutions200ResponseInstitutionsInner(
                institution_id = 'ins_118923',
                name = 'Red Platypus Bank - Red Platypus Bank',
                country_codes = [
                    'US'
                    ],
                products = [
                    'assets'
                    ],
                routing_numbers = [
                    '011000138'
                    ],
                dtc_numbers = [
                    '2236'
                    ],
                oauth = False,
                status = openapi_client.models.search_institutions_200_response_institutions_inner_status.searchInstitutions_200_response_institutions_inner_status(
                    item_logins = openapi_client.models.search_institutions_200_response_institutions_inner_status_item_logins.searchInstitutions_200_response_institutions_inner_status_item_logins(
                        status = 'HEALTHY', 
                        last_status_change = '2019-02-15T15:53Z', 
                        breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_item_logins_breakdown.searchInstitutions_200_response_institutions_inner_status_item_logins_breakdown(
                            success = 0.9, 
                            error_plaid = 0.01, 
                            error_institution = 0.09, ), ), 
                    transactions_updates = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates.searchInstitutions_200_response_institutions_inner_status_transactions_updates(
                        status = 'HEALTHY', 
                        last_status_change = '2019-02-12T08:22Z', ), 
                    auth = openapi_client.models.search_institutions_200_response_institutions_inner_status_auth.searchInstitutions_200_response_institutions_inner_status_auth(
                        status = 'HEALTHY', 
                        last_status_change = '2019-02-15T15:53Z', ), 
                    identity = openapi_client.models.search_institutions_200_response_institutions_inner_status_identity.searchInstitutions_200_response_institutions_inner_status_identity(
                        status = 'DEGRADED', 
                        last_status_change = '2019-02-15T15:50Z', ), 
                    investments = openapi_client.models.search_institutions_200_response_institutions_inner_status_investments.searchInstitutions_200_response_institutions_inner_status_investments(
                        status = 'HEALTHY', 
                        last_status_change = '2019-02-15T15:53Z', ), 
                    investments_updates = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates.searchInstitutions_200_response_institutions_inner_status_transactions_updates(
                        status = 'HEALTHY', 
                        last_status_change = '2019-02-12T08:22Z', ), 
                    liabilities_updates = , )
            )
        else:
            return SearchInstitutions200ResponseInstitutionsInner(
        )
        """

    def testSearchInstitutions200ResponseInstitutionsInner(self):
        """Test SearchInstitutions200ResponseInstitutionsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
