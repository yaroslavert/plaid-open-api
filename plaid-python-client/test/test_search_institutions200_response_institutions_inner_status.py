# coding: utf-8

"""
    Plaid API

    API for accessing financial institution data via Plaid.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_institutions200_response_institutions_inner_status import SearchInstitutions200ResponseInstitutionsInnerStatus

class TestSearchInstitutions200ResponseInstitutionsInnerStatus(unittest.TestCase):
    """SearchInstitutions200ResponseInstitutionsInnerStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchInstitutions200ResponseInstitutionsInnerStatus:
        """Test SearchInstitutions200ResponseInstitutionsInnerStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchInstitutions200ResponseInstitutionsInnerStatus`
        """
        model = SearchInstitutions200ResponseInstitutionsInnerStatus()
        if include_optional:
            return SearchInstitutions200ResponseInstitutionsInnerStatus(
                item_logins = openapi_client.models.search_institutions_200_response_institutions_inner_status_item_logins.searchInstitutions_200_response_institutions_inner_status_item_logins(
                    status = 'HEALTHY', 
                    last_status_change = '2019-02-15T15:53Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_item_logins_breakdown.searchInstitutions_200_response_institutions_inner_status_item_logins_breakdown(
                        success = 0.9, 
                        error_plaid = 0.01, 
                        error_institution = 0.09, ), ),
                transactions_updates = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates.searchInstitutions_200_response_institutions_inner_status_transactions_updates(
                    status = 'HEALTHY', 
                    last_status_change = '2019-02-12T08:22Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates_breakdown.searchInstitutions_200_response_institutions_inner_status_transactions_updates_breakdown(
                        success = 0.95, 
                        error_plaid = 0.02, 
                        error_institution = 0.03, 
                        refresh_interval = 'NORMAL', ), ),
                auth = openapi_client.models.search_institutions_200_response_institutions_inner_status_auth.searchInstitutions_200_response_institutions_inner_status_auth(
                    status = 'HEALTHY', 
                    last_status_change = '2019-02-15T15:53Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_auth_breakdown.searchInstitutions_200_response_institutions_inner_status_auth_breakdown(
                        success = 0.91, 
                        error_plaid = 0.01, 
                        error_institution = 0.08, ), ),
                identity = openapi_client.models.search_institutions_200_response_institutions_inner_status_identity.searchInstitutions_200_response_institutions_inner_status_identity(
                    status = 'DEGRADED', 
                    last_status_change = '2019-02-15T15:50Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_identity_breakdown.searchInstitutions_200_response_institutions_inner_status_identity_breakdown(
                        success = 0.42, 
                        error_plaid = 0.08, 
                        error_institution = 0.5, ), ),
                investments = openapi_client.models.search_institutions_200_response_institutions_inner_status_investments.searchInstitutions_200_response_institutions_inner_status_investments(
                    status = 'HEALTHY', 
                    last_status_change = '2019-02-15T15:53Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_investments_breakdown.searchInstitutions_200_response_institutions_inner_status_investments_breakdown(
                        success = 0.89, 
                        error_plaid = 0.02, 
                        error_institution = 0.09, ), ),
                investments_updates = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates.searchInstitutions_200_response_institutions_inner_status_transactions_updates(
                    status = 'HEALTHY', 
                    last_status_change = '2019-02-12T08:22Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates_breakdown.searchInstitutions_200_response_institutions_inner_status_transactions_updates_breakdown(
                        success = 0.95, 
                        error_plaid = 0.02, 
                        error_institution = 0.03, 
                        refresh_interval = 'NORMAL', ), ),
                liabilities_updates = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates.searchInstitutions_200_response_institutions_inner_status_transactions_updates(
                    status = 'HEALTHY', 
                    last_status_change = '2019-02-12T08:22Z', 
                    breakdown = openapi_client.models.search_institutions_200_response_institutions_inner_status_transactions_updates_breakdown.searchInstitutions_200_response_institutions_inner_status_transactions_updates_breakdown(
                        success = 0.95, 
                        error_plaid = 0.02, 
                        error_institution = 0.03, 
                        refresh_interval = 'NORMAL', ), )
            )
        else:
            return SearchInstitutions200ResponseInstitutionsInnerStatus(
        )
        """

    def testSearchInstitutions200ResponseInstitutionsInnerStatus(self):
        """Test SearchInstitutions200ResponseInstitutionsInnerStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
